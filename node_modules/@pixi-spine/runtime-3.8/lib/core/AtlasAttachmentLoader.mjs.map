{"version":3,"file":"AtlasAttachmentLoader.mjs","sources":["../../src/core/AtlasAttachmentLoader.ts"],"sourcesContent":["import { AttachmentLoader, RegionAttachment, MeshAttachment, BoundingBoxAttachment, PathAttachment, PointAttachment, ClippingAttachment } from './attachments';\nimport type { TextureAtlas } from '@pixi-spine/base';\nimport type { Skin } from './Skin';\n\n/**\n * @public\n */\nexport class AtlasAttachmentLoader implements AttachmentLoader {\n    atlas: TextureAtlas;\n\n    constructor(atlas: TextureAtlas) {\n        this.atlas = atlas;\n    }\n\n    /** @return May be null to not load an attachment. */\n    newRegionAttachment(skin: Skin, name: string, path: string): RegionAttachment {\n        const region = this.atlas.findRegion(path);\n\n        if (region == null) throw new Error(`Region not found in atlas: ${path} (region attachment: ${name})`);\n        const attachment = new RegionAttachment(name);\n\n        attachment.region = region;\n\n        return attachment;\n    }\n\n    /** @return May be null to not load an attachment. */\n    newMeshAttachment(skin: Skin, name: string, path: string): MeshAttachment {\n        const region = this.atlas.findRegion(path);\n\n        if (region == null) throw new Error(`Region not found in atlas: ${path} (mesh attachment: ${name})`);\n        const attachment = new MeshAttachment(name);\n\n        attachment.region = region;\n\n        return attachment;\n    }\n\n    /** @return May be null to not load an attachment. */\n    newBoundingBoxAttachment(skin: Skin, name: string): BoundingBoxAttachment {\n        return new BoundingBoxAttachment(name);\n    }\n\n    /** @return May be null to not load an attachment */\n    newPathAttachment(skin: Skin, name: string): PathAttachment {\n        return new PathAttachment(name);\n    }\n\n    newPointAttachment(skin: Skin, name: string): PointAttachment {\n        return new PointAttachment(name);\n    }\n\n    newClippingAttachment(skin: Skin, name: string): ClippingAttachment {\n        return new ClippingAttachment(name);\n    }\n}\n"],"names":[],"mappings":";;;;;;;;AAOO,MAAM,qBAAkD,CAAA;AAAA,EAG3D,YAAY,KAAqB,EAAA;AAC7B,IAAA,IAAA,CAAK,KAAQ,GAAA,KAAA,CAAA;AAAA,GACjB;AAAA;AAAA,EAGA,mBAAA,CAAoB,IAAY,EAAA,IAAA,EAAc,IAAgC,EAAA;AAC1E,IAAA,MAAM,MAAS,GAAA,IAAA,CAAK,KAAM,CAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AAEzC,IAAA,IAAI,MAAU,IAAA,IAAA;AAAM,MAAA,MAAM,IAAI,KAAA,CAAM,CAA8B,2BAAA,EAAA,IAAA,CAAA,qBAAA,EAA4B,IAAO,CAAA,CAAA,CAAA,CAAA,CAAA;AACrG,IAAM,MAAA,UAAA,GAAa,IAAI,gBAAA,CAAiB,IAAI,CAAA,CAAA;AAE5C,IAAA,UAAA,CAAW,MAAS,GAAA,MAAA,CAAA;AAEpB,IAAO,OAAA,UAAA,CAAA;AAAA,GACX;AAAA;AAAA,EAGA,iBAAA,CAAkB,IAAY,EAAA,IAAA,EAAc,IAA8B,EAAA;AACtE,IAAA,MAAM,MAAS,GAAA,IAAA,CAAK,KAAM,CAAA,UAAA,CAAW,IAAI,CAAA,CAAA;AAEzC,IAAA,IAAI,MAAU,IAAA,IAAA;AAAM,MAAA,MAAM,IAAI,KAAA,CAAM,CAA8B,2BAAA,EAAA,IAAA,CAAA,mBAAA,EAA0B,IAAO,CAAA,CAAA,CAAA,CAAA,CAAA;AACnG,IAAM,MAAA,UAAA,GAAa,IAAI,cAAA,CAAe,IAAI,CAAA,CAAA;AAE1C,IAAA,UAAA,CAAW,MAAS,GAAA,MAAA,CAAA;AAEpB,IAAO,OAAA,UAAA,CAAA;AAAA,GACX;AAAA;AAAA,EAGA,wBAAA,CAAyB,MAAY,IAAqC,EAAA;AACtE,IAAO,OAAA,IAAI,sBAAsB,IAAI,CAAA,CAAA;AAAA,GACzC;AAAA;AAAA,EAGA,iBAAA,CAAkB,MAAY,IAA8B,EAAA;AACxD,IAAO,OAAA,IAAI,eAAe,IAAI,CAAA,CAAA;AAAA,GAClC;AAAA,EAEA,kBAAA,CAAmB,MAAY,IAA+B,EAAA;AAC1D,IAAO,OAAA,IAAI,gBAAgB,IAAI,CAAA,CAAA;AAAA,GACnC;AAAA,EAEA,qBAAA,CAAsB,MAAY,IAAkC,EAAA;AAChE,IAAO,OAAA,IAAI,mBAAmB,IAAI,CAAA,CAAA;AAAA,GACtC;AACJ;;;;"}